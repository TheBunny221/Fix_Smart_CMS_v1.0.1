{"numTotalTestSuites":97,"numPassedTestSuites":89,"numFailedTestSuites":8,"numPendingTestSuites":0,"numTotalTests":163,"numPassedTests":0,"numFailedTests":0,"numPendingTests":163,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1761708632181,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["cn function"],"fullName":"cn function should merge classes correctly","status":"skipped","title":"should merge classes correctly","failureMessages":[],"meta":{}},{"ancestorTitles":["cn function"],"fullName":"cn function should handle conditional classes","status":"skipped","title":"should handle conditional classes","failureMessages":[],"meta":{}},{"ancestorTitles":["cn function"],"fullName":"cn function should handle false and null conditions","status":"skipped","title":"should handle false and null conditions","failureMessages":[],"meta":{}},{"ancestorTitles":["cn function"],"fullName":"cn function should merge tailwind classes properly","status":"skipped","title":"should merge tailwind classes properly","failureMessages":[],"meta":{}},{"ancestorTitles":["cn function"],"fullName":"cn function should work with object notation","status":"skipped","title":"should work with object notation","failureMessages":[],"meta":{}}],"startTime":1761708632181,"endTime":1761708632181,"status":"passed","message":"","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/lib/utils.spec.ts"},{"assertionResults":[{"ancestorTitles":["🚀 Comprehensive Test Suite","🔍 Performance Monitoring"],"fullName":"🚀 Comprehensive Test Suite 🔍 Performance Monitoring should detect excessive component renders","status":"skipped","title":"should detect excessive component renders","failureMessages":[],"meta":{}},{"ancestorTitles":["🚀 Comprehensive Test Suite","🔍 Performance Monitoring"],"fullName":"🚀 Comprehensive Test Suite 🔍 Performance Monitoring should detect excessive API calls","status":"skipped","title":"should detect excessive API calls","failureMessages":[],"meta":{}},{"ancestorTitles":["🚀 Comprehensive Test Suite","🔍 Performance Monitoring"],"fullName":"🚀 Comprehensive Test Suite 🔍 Performance Monitoring should provide performance reports","status":"skipped","title":"should provide performance reports","failureMessages":[],"meta":{}},{"ancestorTitles":["🚀 Comprehensive Test Suite","📋 ComplaintsList Component"],"fullName":"🚀 Comprehensive Test Suite 📋 ComplaintsList Component should render without infinite loops","status":"skipped","title":"should render without infinite loops","failureMessages":[],"meta":{}},{"ancestorTitles":["🚀 Comprehensive Test Suite","📋 ComplaintsList Component"],"fullName":"🚀 Comprehensive Test Suite 📋 ComplaintsList Component should handle search input properly","status":"skipped","title":"should handle search input properly","failureMessages":[],"meta":{}},{"ancestorTitles":["🚀 Comprehensive Test Suite","📊 UnifiedReports Component"],"fullName":"🚀 Comprehensive Test Suite 📊 UnifiedReports Component should render charts without infinite loops","status":"skipped","title":"should render charts without infinite loops","failureMessages":[],"meta":{}},{"ancestorTitles":["🚀 Comprehensive Test Suite","🗺️ SimpleLocationMapDialog Component"],"fullName":"🚀 Comprehensive Test Suite 🗺️ SimpleLocationMapDialog Component should handle location detection without excessive API calls","status":"skipped","title":"should handle location detection without excessive API calls","failureMessages":[],"meta":{}},{"ancestorTitles":["🚀 Comprehensive Test Suite","🔧 useEffect Dependency Arrays"],"fullName":"🚀 Comprehensive Test Suite 🔧 useEffect Dependency Arrays should have stable dependency arrays","status":"skipped","title":"should have stable dependency arrays","failureMessages":[],"meta":{}},{"ancestorTitles":["🚀 Comprehensive Test Suite","🔧 useEffect Dependency Arrays"],"fullName":"🚀 Comprehensive Test Suite 🔧 useEffect Dependency Arrays should prevent infinite loops with proper memoization","status":"skipped","title":"should prevent infinite loops with proper memoization","failureMessages":[],"meta":{}},{"ancestorTitles":["🚀 Comprehensive Test Suite","🎯 Integration Tests"],"fullName":"🚀 Comprehensive Test Suite 🎯 Integration Tests should handle complex component interactions","status":"skipped","title":"should handle complex component interactions","failureMessages":[],"meta":{}},{"ancestorTitles":["🧪 Test Utilities"],"fullName":"🧪 Test Utilities should provide performance monitoring utilities","status":"skipped","title":"should provide performance monitoring utilities","failureMessages":[],"meta":{}},{"ancestorTitles":["🧪 Test Utilities"],"fullName":"🧪 Test Utilities should handle test wrapper correctly","status":"skipped","title":"should handle test wrapper correctly","failureMessages":[],"meta":{}}],"startTime":1761708632181,"endTime":1761708632181,"status":"passed","message":"","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/comprehensive.test.tsx"},{"assertionResults":[{"ancestorTitles":["Context Safety Tests","SystemConfigContext"],"fullName":"Context Safety Tests SystemConfigContext should provide default values when used outside provider","status":"skipped","title":"should provide default values when used outside provider","failureMessages":[],"meta":{}},{"ancestorTitles":["Context Safety Tests","SystemConfigContext"],"fullName":"Context Safety Tests SystemConfigContext should work correctly when used within provider","status":"skipped","title":"should work correctly when used within provider","failureMessages":[],"meta":{}},{"ancestorTitles":["Context Safety Tests","SystemConfigContext"],"fullName":"Context Safety Tests SystemConfigContext should handle API errors gracefully","status":"skipped","title":"should handle API errors gracefully","failureMessages":[],"meta":{}},{"ancestorTitles":["Context Safety Tests","OtpContext"],"fullName":"Context Safety Tests OtpContext should provide default values when used outside provider","status":"skipped","title":"should provide default values when used outside provider","failureMessages":[],"meta":{}},{"ancestorTitles":["Context Safety Tests","OtpContext"],"fullName":"Context Safety Tests OtpContext should work correctly when used within provider","status":"skipped","title":"should work correctly when used within provider","failureMessages":[],"meta":{}},{"ancestorTitles":["Context Safety Tests","OtpContext"],"fullName":"Context Safety Tests OtpContext should validate email when opening OTP flow","status":"skipped","title":"should validate email when opening OTP flow","failureMessages":[],"meta":{}},{"ancestorTitles":["Context Safety Tests","ContextErrorBoundary"],"fullName":"Context Safety Tests ContextErrorBoundary should catch context-related errors","status":"skipped","title":"should catch context-related errors","failureMessages":[],"meta":{}},{"ancestorTitles":["Context Safety Tests","ContextErrorBoundary"],"fullName":"Context Safety Tests ContextErrorBoundary should allow retry after error","status":"skipped","title":"should allow retry after error","failureMessages":[],"meta":{}},{"ancestorTitles":["Context Safety Tests","ContextErrorBoundary"],"fullName":"Context Safety Tests ContextErrorBoundary should render custom fallback when provided","status":"skipped","title":"should render custom fallback when provided","failureMessages":[],"meta":{}},{"ancestorTitles":["Context Safety Tests","Safe Context Hooks"],"fullName":"Context Safety Tests Safe Context Hooks should use fallback value when context is not available","status":"skipped","title":"should use fallback value when context is not available","failureMessages":[],"meta":{}},{"ancestorTitles":["Context Safety Tests","Safe Context Hooks"],"fullName":"Context Safety Tests Safe Context Hooks should use actual context value when available","status":"skipped","title":"should use actual context value when available","failureMessages":[],"meta":{}},{"ancestorTitles":["Context Safety Tests","Integration Tests"],"fullName":"Context Safety Tests Integration Tests should handle multiple context providers together","status":"skipped","title":"should handle multiple context providers together","failureMessages":[],"meta":{}},{"ancestorTitles":["Context Safety Tests","Integration Tests"],"fullName":"Context Safety Tests Integration Tests should handle partial provider availability","status":"skipped","title":"should handle partial provider availability","failureMessages":[],"meta":{}}],"startTime":1761708632181,"endTime":1761708632181,"status":"passed","message":"","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/contextSafety.test.tsx"},{"assertionResults":[{"ancestorTitles":["🔒 Context Stability Tests","SystemConfigContext Stability"],"fullName":"🔒 Context Stability Tests SystemConfigContext Stability should not cause infinite re-renders","status":"skipped","title":"should not cause infinite re-renders","failureMessages":[],"meta":{}},{"ancestorTitles":["🔒 Context Stability Tests","SystemConfigContext Stability"],"fullName":"🔒 Context Stability Tests SystemConfigContext Stability should provide stable function references","status":"skipped","title":"should provide stable function references","failureMessages":[],"meta":{}},{"ancestorTitles":["🔒 Context Stability Tests","SystemConfigContext Stability"],"fullName":"🔒 Context Stability Tests SystemConfigContext Stability should provide default values when context is unavailable","status":"skipped","title":"should provide default values when context is unavailable","failureMessages":[],"meta":{}},{"ancestorTitles":["🔒 Context Stability Tests","OtpContext Stability"],"fullName":"🔒 Context Stability Tests OtpContext Stability should not cause infinite re-renders","status":"skipped","title":"should not cause infinite re-renders","failureMessages":[],"meta":{}},{"ancestorTitles":["🔒 Context Stability Tests","OtpContext Stability"],"fullName":"🔒 Context Stability Tests OtpContext Stability should provide stable function references","status":"skipped","title":"should provide stable function references","failureMessages":[],"meta":{}},{"ancestorTitles":["🔒 Context Stability Tests","AppInitializer Stability"],"fullName":"🔒 Context Stability Tests AppInitializer Stability should initialize only once","status":"skipped","title":"should initialize only once","failureMessages":[],"meta":{}},{"ancestorTitles":["🔒 Context Stability Tests","AppInitializer Stability"],"fullName":"🔒 Context Stability Tests AppInitializer Stability should handle auth state changes without re-initializing","status":"skipped","title":"should handle auth state changes without re-initializing","failureMessages":[],"meta":{}},{"ancestorTitles":["🔒 Context Stability Tests","Context Integration"],"fullName":"🔒 Context Stability Tests Context Integration should work together without causing loops","status":"skipped","title":"should work together without causing loops","failureMessages":[],"meta":{}},{"ancestorTitles":["🔒 Context Stability Tests","Context Integration"],"fullName":"🔒 Context Stability Tests Context Integration should handle errors gracefully","status":"skipped","title":"should handle errors gracefully","failureMessages":[],"meta":{}},{"ancestorTitles":["🔒 Context Stability Tests","Performance Monitoring"],"fullName":"🔒 Context Stability Tests Performance Monitoring should not have memory leaks","status":"skipped","title":"should not have memory leaks","failureMessages":[],"meta":{}},{"ancestorTitles":["🚀 Production Readiness"],"fullName":"🚀 Production Readiness should log warnings for fallback usage","status":"skipped","title":"should log warnings for fallback usage","failureMessages":[],"meta":{}},{"ancestorTitles":["🚀 Production Readiness"],"fullName":"🚀 Production Readiness should handle rapid state changes","status":"skipped","title":"should handle rapid state changes","failureMessages":[],"meta":{}}],"startTime":1761708632181,"endTime":1761708632181,"status":"passed","message":"","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/contextStability.test.tsx"},{"assertionResults":[{"ancestorTitles":["hasPassword Flow Tests","Redux State Management"],"fullName":"hasPassword Flow Tests Redux State Management should store hasPassword flag correctly when user has password","status":"skipped","title":"should store hasPassword flag correctly when user has password","failureMessages":[],"meta":{}},{"ancestorTitles":["hasPassword Flow Tests","Redux State Management"],"fullName":"hasPassword Flow Tests Redux State Management should store hasPassword flag correctly when user has no password","status":"skipped","title":"should store hasPassword flag correctly when user has no password","failureMessages":[],"meta":{}},{"ancestorTitles":["hasPassword Flow Tests","Password Setup Banner Logic"],"fullName":"hasPassword Flow Tests Password Setup Banner Logic should show banner when user has no password","status":"skipped","title":"should show banner when user has no password","failureMessages":[],"meta":{}},{"ancestorTitles":["hasPassword Flow Tests","Password Setup Banner Logic"],"fullName":"hasPassword Flow Tests Password Setup Banner Logic should hide banner when user has password","status":"skipped","title":"should hide banner when user has password","failureMessages":[],"meta":{}},{"ancestorTitles":["hasPassword Flow Tests","Password Setup State Transition"],"fullName":"hasPassword Flow Tests Password Setup State Transition should update hasPassword to true after password setup","status":"skipped","title":"should update hasPassword to true after password setup","failureMessages":[],"meta":{}},{"ancestorTitles":["hasPassword Flow Tests","JSON Password Handling"],"fullName":"hasPassword Flow Tests JSON Password Handling should show banner for user with JSON password (reset token)","status":"skipped","title":"should show banner for user with JSON password (reset token)","failureMessages":[],"meta":{}},{"ancestorTitles":["hasPassword Flow Tests","JSON Password Handling"],"fullName":"hasPassword Flow Tests JSON Password Handling should handle transition from JSON password to valid password","status":"skipped","title":"should handle transition from JSON password to valid password","failureMessages":[],"meta":{}},{"ancestorTitles":["hasPassword Flow Tests","Backend Integration Simulation"],"fullName":"hasPassword Flow Tests Backend Integration Simulation should correctly identify valid hashed password","status":"skipped","title":"should correctly identify valid hashed password","failureMessages":[],"meta":{}},{"ancestorTitles":["hasPassword Flow Tests","Backend Integration Simulation"],"fullName":"hasPassword Flow Tests Backend Integration Simulation should correctly identify JSON password as invalid","status":"skipped","title":"should correctly identify JSON password as invalid","failureMessages":[],"meta":{}},{"ancestorTitles":["hasPassword Flow Tests","Backend Integration Simulation"],"fullName":"hasPassword Flow Tests Backend Integration Simulation should correctly identify null/undefined password as invalid","status":"skipped","title":"should correctly identify null/undefined password as invalid","failureMessages":[],"meta":{}},{"ancestorTitles":["hasPassword Flow Tests","Backend Integration Simulation"],"fullName":"hasPassword Flow Tests Backend Integration Simulation should create correct user response based on password type","status":"skipped","title":"should create correct user response based on password type","failureMessages":[],"meta":{}}],"startTime":1761708632181,"endTime":1761708632181,"status":"passed","message":"","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/hasPasswordFlow.test.ts"},{"assertionResults":[],"startTime":1761708632181,"endTime":1761708632181,"status":"failed","message":"jest is not defined","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/infiniteLoopFixes.test.tsx"},{"assertionResults":[{"ancestorTitles":["Frontend Logger","Basic Logging Methods"],"fullName":"Frontend Logger Basic Logging Methods should log error messages to console in development","status":"skipped","title":"should log error messages to console in development","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Basic Logging Methods"],"fullName":"Frontend Logger Basic Logging Methods should log warning messages to console","status":"skipped","title":"should log warning messages to console","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Basic Logging Methods"],"fullName":"Frontend Logger Basic Logging Methods should log info messages to console","status":"skipped","title":"should log info messages to console","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Basic Logging Methods"],"fullName":"Frontend Logger Basic Logging Methods should log debug messages to console in development","status":"skipped","title":"should log debug messages to console in development","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Log Level Filtering"],"fullName":"Frontend Logger Log Level Filtering should respect log level configuration","status":"skipped","title":"should respect log level configuration","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Convenience Methods"],"fullName":"Frontend Logger Convenience Methods should log auth messages with correct module","status":"skipped","title":"should log auth messages with correct module","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Convenience Methods"],"fullName":"Frontend Logger Convenience Methods should log API messages with correct module","status":"skipped","title":"should log API messages with correct module","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Convenience Methods"],"fullName":"Frontend Logger Convenience Methods should log UI messages with correct module","status":"skipped","title":"should log UI messages with correct module","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Convenience Methods"],"fullName":"Frontend Logger Convenience Methods should log performance metrics","status":"skipped","title":"should log performance metrics","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Context-Aware Logging"],"fullName":"Frontend Logger Context-Aware Logging should log with user context","status":"skipped","title":"should log with user context","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Context-Aware Logging"],"fullName":"Frontend Logger Context-Aware Logging should log with component context","status":"skipped","title":"should log with component context","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Context-Aware Logging"],"fullName":"Frontend Logger Context-Aware Logging should log with module context","status":"skipped","title":"should log with module context","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","React-Specific Logging"],"fullName":"Frontend Logger React-Specific Logging should log component errors","status":"skipped","title":"should log component errors","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","React-Specific Logging"],"fullName":"Frontend Logger React-Specific Logging should log hook errors","status":"skipped","title":"should log hook errors","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","React-Specific Logging"],"fullName":"Frontend Logger React-Specific Logging should log route changes","status":"skipped","title":"should log route changes","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","API Call Logging"],"fullName":"Frontend Logger API Call Logging should log successful API calls","status":"skipped","title":"should log successful API calls","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","API Call Logging"],"fullName":"Frontend Logger API Call Logging should log failed API calls as errors","status":"skipped","title":"should log failed API calls as errors","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","API Call Logging"],"fullName":"Frontend Logger API Call Logging should log redirects as warnings","status":"skipped","title":"should log redirects as warnings","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Backend Log Submission"],"fullName":"Frontend Logger Backend Log Submission should queue logs for backend submission when enabled","status":"skipped","title":"should queue logs for backend submission when enabled","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Backend Log Submission"],"fullName":"Frontend Logger Backend Log Submission should immediately flush error logs","status":"skipped","title":"should immediately flush error logs","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Backend Log Submission"],"fullName":"Frontend Logger Backend Log Submission should handle backend submission failures gracefully","status":"skipped","title":"should handle backend submission failures gracefully","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Backend Log Submission"],"fullName":"Frontend Logger Backend Log Submission should limit queue size","status":"skipped","title":"should limit queue size","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Global Error Handling"],"fullName":"Frontend Logger Global Error Handling should handle window error events","status":"skipped","title":"should handle window error events","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Global Error Handling"],"fullName":"Frontend Logger Global Error Handling should handle unhandled promise rejections","status":"skipped","title":"should handle unhandled promise rejections","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Log Entry Creation"],"fullName":"Frontend Logger Log Entry Creation should create properly formatted log entries","status":"skipped","title":"should create properly formatted log entries","failureMessages":[],"meta":{}},{"ancestorTitles":["Frontend Logger","Manual Flush"],"fullName":"Frontend Logger Manual Flush should allow manual flushing of logs","status":"skipped","title":"should allow manual flushing of logs","failureMessages":[],"meta":{}}],"startTime":1761708632181,"endTime":1761708632181,"status":"passed","message":"","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/logger.test.ts"},{"assertionResults":[],"startTime":1761708632181,"endTime":1761708632181,"status":"failed","message":"  \u001b[31m×\u001b[0m Expected '>', got 'data'\n    ╭─[\u001b[36;1;4mD:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/loggingIntegration.test.ts:61:1\u001b[0m]\n \u001b[2m58\u001b[0m │ \n \u001b[2m59\u001b[0m │   return (\n \u001b[2m60\u001b[0m │     <div>\n \u001b[2m61\u001b[0m │       <button data-testid=\"error-button\" onClick={handleError}>\n    · \u001b[35;1m              ────\u001b[0m\n \u001b[2m62\u001b[0m │         Trigger Error\n \u001b[2m63\u001b[0m │       </button>\n \u001b[2m63\u001b[0m │       <button data-testid=\"api-button\" onClick={handleApiCall}>\r\n    ╰────\n\n\nCaused by:\n    Syntax Error","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/loggingIntegration.test.ts"},{"assertionResults":[{"ancestorTitles":["🔍 OtpProvider Context Routes Test","✅ OtpProvider Availability"],"fullName":"🔍 OtpProvider Context Routes Test ✅ OtpProvider Availability should provide OtpContext in basic component","status":"skipped","title":"should provide OtpContext in basic component","failureMessages":[],"meta":{}},{"ancestorTitles":["🔍 OtpProvider Context Routes Test","✅ OtpProvider Availability"],"fullName":"🔍 OtpProvider Context Routes Test ✅ OtpProvider Availability should provide OtpContext in /tasks/KSC0002 route simulation","status":"skipped","title":"should provide OtpContext in /tasks/KSC0002 route simulation","failureMessages":[],"meta":{}},{"ancestorTitles":["🔍 OtpProvider Context Routes Test","✅ OtpProvider Availability"],"fullName":"🔍 OtpProvider Context Routes Test ✅ OtpProvider Availability should handle OTP flow operations without errors","status":"skipped","title":"should handle OTP flow operations without errors","failureMessages":[],"meta":{}},{"ancestorTitles":["🔍 OtpProvider Context Routes Test","🚨 Error Handling"],"fullName":"🔍 OtpProvider Context Routes Test 🚨 Error Handling should handle missing provider gracefully","status":"skipped","title":"should handle missing provider gracefully","failureMessages":[],"meta":{}},{"ancestorTitles":["🔍 OtpProvider Context Routes Test","🚨 Error Handling"],"fullName":"🔍 OtpProvider Context Routes Test 🚨 Error Handling should provide fallback functionality when provider is missing","status":"skipped","title":"should provide fallback functionality when provider is missing","failureMessages":[],"meta":{}},{"ancestorTitles":["🔍 OtpProvider Context Routes Test","🛣️ Route-Specific Tests"],"fullName":"🔍 OtpProvider Context Routes Test 🛣️ Route-Specific Tests should provide OtpContext for route: /tasks/KSC0002","status":"skipped","title":"should provide OtpContext for route: /tasks/KSC0002","failureMessages":[],"meta":{}},{"ancestorTitles":["🔍 OtpProvider Context Routes Test","🛣️ Route-Specific Tests"],"fullName":"🔍 OtpProvider Context Routes Test 🛣️ Route-Specific Tests should provide OtpContext for route: /tasks/123","status":"skipped","title":"should provide OtpContext for route: /tasks/123","failureMessages":[],"meta":{}},{"ancestorTitles":["🔍 OtpProvider Context Routes Test","🛣️ Route-Specific Tests"],"fullName":"🔍 OtpProvider Context Routes Test 🛣️ Route-Specific Tests should provide OtpContext for route: /tasks/ABC123","status":"skipped","title":"should provide OtpContext for route: /tasks/ABC123","failureMessages":[],"meta":{}},{"ancestorTitles":["🔍 OtpProvider Context Routes Test","🛣️ Route-Specific Tests"],"fullName":"🔍 OtpProvider Context Routes Test 🛣️ Route-Specific Tests should provide OtpContext for route: /complaints/create","status":"skipped","title":"should provide OtpContext for route: /complaints/create","failureMessages":[],"meta":{}},{"ancestorTitles":["🔍 OtpProvider Context Routes Test","🛣️ Route-Specific Tests"],"fullName":"🔍 OtpProvider Context Routes Test 🛣️ Route-Specific Tests should provide OtpContext for route: /dashboard","status":"skipped","title":"should provide OtpContext for route: /dashboard","failureMessages":[],"meta":{}},{"ancestorTitles":["🔍 OtpProvider Context Routes Test","🔄 Provider Hierarchy"],"fullName":"🔍 OtpProvider Context Routes Test 🔄 Provider Hierarchy should maintain context through nested components","status":"skipped","title":"should maintain context through nested components","failureMessages":[],"meta":{}},{"ancestorTitles":["🔍 OtpProvider Context Routes Test","🔄 Provider Hierarchy"],"fullName":"🔍 OtpProvider Context Routes Test 🔄 Provider Hierarchy should work with lazy-loaded components","status":"skipped","title":"should work with lazy-loaded components","failureMessages":[],"meta":{}},{"ancestorTitles":["🔍 OtpProvider Context Routes Test","🎯 Specific KSC0002 Issue"],"fullName":"🔍 OtpProvider Context Routes Test 🎯 Specific KSC0002 Issue should handle KSC0002 task ID without context errors","status":"skipped","title":"should handle KSC0002 task ID without context errors","failureMessages":[],"meta":{}},{"ancestorTitles":["🔧 OtpProvider Error Recovery"],"fullName":"🔧 OtpProvider Error Recovery should recover from provider errors gracefully","status":"skipped","title":"should recover from provider errors gracefully","failureMessages":[],"meta":{}}],"startTime":1761708632181,"endTime":1761708632181,"status":"passed","message":"","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/otpContextRoutes.test.tsx"},{"assertionResults":[{"ancestorTitles":["✅ Production Stability Verification"],"fullName":"✅ Production Stability Verification ✅ AppInitializer should initialize only once","status":"skipped","title":"✅ AppInitializer should initialize only once","failureMessages":[],"meta":{}},{"ancestorTitles":["✅ Production Stability Verification"],"fullName":"✅ Production Stability Verification ✅ Contexts should not cause infinite re-renders","status":"skipped","title":"✅ Contexts should not cause infinite re-renders","failureMessages":[],"meta":{}},{"ancestorTitles":["✅ Production Stability Verification"],"fullName":"✅ Production Stability Verification ✅ Contexts should provide safe default values","status":"skipped","title":"✅ Contexts should provide safe default values","failureMessages":[],"meta":{}},{"ancestorTitles":["✅ Production Stability Verification"],"fullName":"✅ Production Stability Verification ✅ No memory leaks on unmount","status":"skipped","title":"✅ No memory leaks on unmount","failureMessages":[],"meta":{}},{"ancestorTitles":["✅ Production Stability Verification"],"fullName":"✅ Production Stability Verification ✅ API calls should not be duplicated","status":"skipped","title":"✅ API calls should not be duplicated","failureMessages":[],"meta":{}},{"ancestorTitles":["🎯 Summary"],"fullName":"🎯 Summary should log success summary","status":"skipped","title":"should log success summary","failureMessages":[],"meta":{}}],"startTime":1761708632181,"endTime":1761708632181,"status":"passed","message":"","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/verifyStability.test.tsx"},{"assertionResults":[{"ancestorTitles":["SystemConfigInitializer"],"fullName":"SystemConfigInitializer renders children without blocking","status":"skipped","title":"renders children without blocking","failureMessages":[],"meta":{}},{"ancestorTitles":["SystemConfigInitializer"],"fullName":"SystemConfigInitializer fetches system config on mount when not previously fetched","status":"skipped","title":"fetches system config on mount when not previously fetched","failureMessages":[],"meta":{}},{"ancestorTitles":["SystemConfigInitializer"],"fullName":"SystemConfigInitializer does not fetch when recently fetched","status":"skipped","title":"does not fetch when recently fetched","failureMessages":[],"meta":{}}],"startTime":1761708632181,"endTime":1761708632181,"status":"passed","message":"","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/components/__tests__/SystemConfigInitializer.test.tsx"},{"assertionResults":[],"startTime":1761708632181,"endTime":1761708632181,"status":"failed","message":"Failed to resolve import \"../ComplaintQuickActions\" from \"client/legacy-components/__tests__/ComplaintQuickActions.test.tsx\". Does the file exist?","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/legacy-components/__tests__/ComplaintQuickActions.test.tsx"},{"assertionResults":[],"startTime":1761708632181,"endTime":1761708632181,"status":"failed","message":"jest is not defined","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/pages/__tests__/GuestComplaintForm.test.tsx"},{"assertionResults":[{"ancestorTitles":["Guest Form Validation","validateStep1"],"fullName":"Guest Form Validation validateStep1 should validate all required fields correctly","status":"skipped","title":"should validate all required fields correctly","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","validateStep1"],"fullName":"Guest Form Validation validateStep1 should require full name","status":"skipped","title":"should require full name","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","validateStep1"],"fullName":"Guest Form Validation validateStep1 should validate full name length","status":"skipped","title":"should validate full name length","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","validateStep1"],"fullName":"Guest Form Validation validateStep1 should validate email format","status":"skipped","title":"should validate email format","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","validateStep1"],"fullName":"Guest Form Validation validateStep1 should validate phone number format","status":"skipped","title":"should validate phone number format","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","validateStep1"],"fullName":"Guest Form Validation validateStep1 should validate complaint type","status":"skipped","title":"should validate complaint type","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","validateStep1"],"fullName":"Guest Form Validation validateStep1 should validate description length","status":"skipped","title":"should validate description length","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","validateStep2"],"fullName":"Guest Form Validation validateStep2 should validate all required location fields","status":"skipped","title":"should validate all required location fields","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","validateStep2"],"fullName":"Guest Form Validation validateStep2 should require ward selection","status":"skipped","title":"should require ward selection","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","validateStep2"],"fullName":"Guest Form Validation validateStep2 should require sub-zone selection","status":"skipped","title":"should require sub-zone selection","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","validateStep2"],"fullName":"Guest Form Validation validateStep2 should validate area length","status":"skipped","title":"should validate area length","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","validateStep2"],"fullName":"Guest Form Validation validateStep2 should validate optional fields length","status":"skipped","title":"should validate optional fields length","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","validateStep3"],"fullName":"Guest Form Validation validateStep3 should allow valid image files","status":"skipped","title":"should allow valid image files","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","validateStep3"],"fullName":"Guest Form Validation validateStep3 should reject too many files","status":"skipped","title":"should reject too many files","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","validateStep3"],"fullName":"Guest Form Validation validateStep3 should reject files exceeding size limit","status":"skipped","title":"should reject files exceeding size limit","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","validateStep3"],"fullName":"Guest Form Validation validateStep3 should reject invalid file types","status":"skipped","title":"should reject invalid file types","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","validateAllSteps"],"fullName":"Guest Form Validation validateAllSteps should validate complete form data","status":"skipped","title":"should validate complete form data","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","validateAllSteps"],"fullName":"Guest Form Validation validateAllSteps should combine errors from all steps","status":"skipped","title":"should combine errors from all steps","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","Helper functions","isValidEmail"],"fullName":"Guest Form Validation Helper functions isValidEmail should validate email formats correctly","status":"skipped","title":"should validate email formats correctly","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","Helper functions","isValidPhoneNumber"],"fullName":"Guest Form Validation Helper functions isValidPhoneNumber should validate phone number formats correctly","status":"skipped","title":"should validate phone number formats correctly","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","Helper functions","isValidComplaintType"],"fullName":"Guest Form Validation Helper functions isValidComplaintType should validate complaint types correctly","status":"skipped","title":"should validate complaint types correctly","failureMessages":[],"meta":{}},{"ancestorTitles":["Guest Form Validation","Helper functions","isValidPriority"],"fullName":"Guest Form Validation Helper functions isValidPriority should validate priority levels correctly","status":"skipped","title":"should validate priority levels correctly","failureMessages":[],"meta":{}}],"startTime":1761708632181,"endTime":1761708632181,"status":"passed","message":"","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/utils/__tests__/guestFormValidation.test.ts"},{"assertionResults":[],"startTime":1761708632181,"endTime":1761708632181,"status":"failed","message":"Failed to resolve import \"@tanstack/react-query\" from \"client/__tests__/utils/test-utils.tsx\". Does the file exist?","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/components/RoleBasedRoute.test.tsx"},{"assertionResults":[],"startTime":1761708632181,"endTime":1761708632181,"status":"failed","message":"jest is not defined","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/components/UpdateComplaintModal.test.tsx"},{"assertionResults":[],"startTime":1761708632181,"endTime":1761708632181,"status":"passed","message":"","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/components/UserSelectDropdown.test.tsx"},{"assertionResults":[{"ancestorTitles":["authApi","loginWithPassword"],"fullName":"authApi loginWithPassword handles successful login","status":"skipped","title":"handles successful login","failureMessages":[],"meta":{}},{"ancestorTitles":["authApi","loginWithPassword"],"fullName":"authApi loginWithPassword handles login failure","status":"skipped","title":"handles login failure","failureMessages":[],"meta":{}},{"ancestorTitles":["authApi","loginWithPassword"],"fullName":"authApi loginWithPassword includes correct headers and body","status":"skipped","title":"includes correct headers and body","failureMessages":[],"meta":{}},{"ancestorTitles":["authApi","getCurrentUser"],"fullName":"authApi getCurrentUser includes authorization header when token is available","status":"skipped","title":"includes authorization header when token is available","failureMessages":[],"meta":{}},{"ancestorTitles":["authApi","getCurrentUser"],"fullName":"authApi getCurrentUser handles 401 unauthorized response","status":"skipped","title":"handles 401 unauthorized response","failureMessages":[],"meta":{}},{"ancestorTitles":["authApi","updateProfile"],"fullName":"authApi updateProfile implements optimistic updates","status":"skipped","title":"implements optimistic updates","failureMessages":[],"meta":{}},{"ancestorTitles":["authApi","updateProfile"],"fullName":"authApi updateProfile reverts optimistic update on failure","status":"skipped","title":"reverts optimistic update on failure","failureMessages":[],"meta":{}},{"ancestorTitles":["authApi","error handling"],"fullName":"authApi error handling transforms error responses correctly","status":"skipped","title":"transforms error responses correctly","failureMessages":[],"meta":{}},{"ancestorTitles":["authApi","error handling"],"fullName":"authApi error handling handles network errors","status":"skipped","title":"handles network errors","failureMessages":[],"meta":{}},{"ancestorTitles":["authApi","caching behavior"],"fullName":"authApi caching behavior caches successful responses","status":"skipped","title":"caches successful responses","failureMessages":[],"meta":{}},{"ancestorTitles":["authApi","caching behavior"],"fullName":"authApi caching behavior invalidates cache on mutations","status":"skipped","title":"invalidates cache on mutations","failureMessages":[],"meta":{}}],"startTime":1761708632181,"endTime":1761708632181,"status":"passed","message":"","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/api/authApi.test.ts"},{"assertionResults":[{"ancestorTitles":["complaintsApi","getComplaints"],"fullName":"complaintsApi getComplaints fetches complaints with correct parameters","status":"skipped","title":"fetches complaints with correct parameters","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","getComplaints"],"fullName":"complaintsApi getComplaints applies filters correctly","status":"skipped","title":"applies filters correctly","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","getComplaints"],"fullName":"complaintsApi getComplaints handles unauthorized access","status":"skipped","title":"handles unauthorized access","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","getComplaints"],"fullName":"complaintsApi getComplaints skips query when not authenticated","status":"skipped","title":"skips query when not authenticated","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","getComplaint"],"fullName":"complaintsApi getComplaint fetches single complaint successfully","status":"skipped","title":"fetches single complaint successfully","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","getComplaint"],"fullName":"complaintsApi getComplaint handles complaint not found","status":"skipped","title":"handles complaint not found","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","getComplaint"],"fullName":"complaintsApi getComplaint handles forbidden access","status":"skipped","title":"handles forbidden access","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","createComplaint"],"fullName":"complaintsApi createComplaint creates complaint successfully","status":"skipped","title":"creates complaint successfully","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","createComplaint"],"fullName":"complaintsApi createComplaint handles validation errors","status":"skipped","title":"handles validation errors","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","createComplaint"],"fullName":"complaintsApi createComplaint invalidates complaints list cache after creation","status":"skipped","title":"invalidates complaints list cache after creation","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","updateComplaintStatus"],"fullName":"complaintsApi updateComplaintStatus updates status successfully for authorized users","status":"skipped","title":"updates status successfully for authorized users","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","updateComplaintStatus"],"fullName":"complaintsApi updateComplaintStatus handles unauthorized status update","status":"skipped","title":"handles unauthorized status update","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","addComplaintFeedback"],"fullName":"complaintsApi addComplaintFeedback adds feedback successfully for resolved complaints","status":"skipped","title":"adds feedback successfully for resolved complaints","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","addComplaintFeedback"],"fullName":"complaintsApi addComplaintFeedback prevents feedback on non-resolved complaints","status":"skipped","title":"prevents feedback on non-resolved complaints","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","getComplaintStatistics"],"fullName":"complaintsApi getComplaintStatistics fetches statistics with role-based filtering","status":"skipped","title":"fetches statistics with role-based filtering","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","getComplaintStatistics"],"fullName":"complaintsApi getComplaintStatistics applies date range filters","status":"skipped","title":"applies date range filters","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","caching and invalidation"],"fullName":"complaintsApi caching and invalidation caches complaint queries correctly","status":"skipped","title":"caches complaint queries correctly","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","caching and invalidation"],"fullName":"complaintsApi caching and invalidation invalidates cache after mutations","status":"skipped","title":"invalidates cache after mutations","failureMessages":[],"meta":{}},{"ancestorTitles":["complaintsApi","optimistic updates"],"fullName":"complaintsApi optimistic updates applies optimistic updates for complaint mutations","status":"skipped","title":"applies optimistic updates for complaint mutations","failureMessages":[],"meta":{}}],"startTime":1761708632181,"endTime":1761708632181,"status":"passed","message":"","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/api/complaintsApi.test.ts"},{"assertionResults":[{"ancestorTitles":["useFormValidation"],"fullName":"useFormValidation initializes with default values","status":"skipped","title":"initializes with default values","failureMessages":[],"meta":{}},{"ancestorTitles":["useFormValidation"],"fullName":"useFormValidation validates form data with schema","status":"skipped","title":"validates form data with schema","failureMessages":[],"meta":{}},{"ancestorTitles":["useFormValidation"],"fullName":"useFormValidation handles successful form submission","status":"skipped","title":"handles successful form submission","failureMessages":[],"meta":{}},{"ancestorTitles":["useFormValidation"],"fullName":"useFormValidation handles form submission errors","status":"skipped","title":"handles form submission errors","failureMessages":[],"meta":{}},{"ancestorTitles":["useFormValidation"],"fullName":"useFormValidation handles server validation errors","status":"skipped","title":"handles server validation errors","failureMessages":[],"meta":{}},{"ancestorTitles":["useFormValidation"],"fullName":"useFormValidation clears server errors when field changes","status":"skipped","title":"clears server errors when field changes","failureMessages":[],"meta":{}},{"ancestorTitles":["useFormValidation"],"fullName":"useFormValidation resets form state","status":"skipped","title":"resets form state","failureMessages":[],"meta":{}},{"ancestorTitles":["useFormValidation"],"fullName":"useFormValidation manages loading state during submission","status":"skipped","title":"manages loading state during submission","failureMessages":[],"meta":{}},{"ancestorTitles":["useFormValidation"],"fullName":"useFormValidation validates on different modes","status":"skipped","title":"validates on different modes","failureMessages":[],"meta":{}}],"startTime":1761708632181,"endTime":1761708632181,"status":"passed","message":"","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/hooks/useFormValidation.test.ts"},{"assertionResults":[],"startTime":1761708632181,"endTime":1761708632181,"status":"failed","message":"Cannot read properties of undefined (reading 'get')","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/integration/CitizenDashboard.test.tsx"},{"assertionResults":[],"startTime":1761708632181,"endTime":1761708632181,"status":"failed","message":"Cannot read properties of undefined (reading 'post')","name":"D:/CCRSM/NEW/Fix_Smart_CMS_v1.0.3/client/__tests__/integration/GuestComplaintFlow.test.tsx"}]}
# NLC-CMS Complete Apache Configuration
# This file contains both HTTP and HTTPS virtual hosts in a single configuration

# Enable required modules (add to main Apache config or load separately)
# LoadModule rewrite_module modules/mod_rewrite.so
# LoadModule ssl_module modules/mod_ssl.so
# LoadModule proxy_module modules/mod_proxy.so
# LoadModule proxy_http_module modules/mod_proxy_http.so
# LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so
# LoadModule headers_module modules/mod_headers.so
# LoadModule expires_module modules/mod_expires.so
# LoadModule deflate_module modules/mod_deflate.so

# HTTP Virtual Host (Redirect to HTTPS)
<VirtualHost *:80>
    ServerName nlc-cms.local
    ServerAlias www.nlc-cms.local *.nlc-cms.local
    DocumentRoot /var/www/nlc-cms/public
    
    # Enable rewrite engine
    RewriteEngine On
    
    # Allow Let's Encrypt challenges
    RewriteCond %{REQUEST_URI} !^/\.well-known/acme-challenge/
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
    
    # Let's Encrypt challenge directory
    Alias /.well-known/acme-challenge/ /var/www/html/.well-known/acme-challenge/
    <Directory "/var/www/html/.well-known/acme-challenge/">
        Options None
        AllowOverride None
        Require all granted
    </Directory>
    
    # Basic security headers for HTTP
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options DENY
    Header always set X-XSS-Protection "1; mode=block"
    
    # Logging
    ErrorLog ${APACHE_LOG_DIR}/nlc-cms-http-error.log
    CustomLog ${APACHE_LOG_DIR}/nlc-cms-http-access.log combined
</VirtualHost>

# HTTPS Virtual Host (Main Application)
<VirtualHost *:443>
    ServerName nlc-cms.local
    ServerAlias www.nlc-cms.local *.nlc-cms.local
    DocumentRoot /var/www/nlc-cms/public
    
    # SSL Configuration
    SSLEngine on
    
    # SSL Certificate paths (update these paths according to your setup)
    SSLCertificateFile /etc/ssl/certs/nlc-cms.crt
    SSLCertificateKeyFile /etc/ssl/private/nlc-cms.key
    # SSLCertificateChainFile /etc/ssl/certs/nlc-cms-chain.crt
    
    # For Let's Encrypt certificates, use:
    # SSLCertificateFile /etc/letsencrypt/live/nlc-cms.local/fullchain.pem
    # SSLCertificateKeyFile /etc/letsencrypt/live/nlc-cms.local/privkey.pem
    
    # Modern SSL Configuration
    SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
    SSLCipherSuite ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    SSLHonorCipherOrder off
    SSLSessionTickets off
    
    # OCSP Stapling
    SSLUseStapling on
    SSLStaplingCache "shmcb:logs/stapling-cache(150000)"
    
    # Security Headers
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    Header always set X-Frame-Options DENY
    Header always set X-Content-Type-Options nosniff
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    
    # Content Security Policy (adjust as needed for your application)
    Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https:; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' ws: wss:; media-src 'self'; object-src 'none'; child-src 'self'; frame-ancestors 'none'; form-action 'self'; base-uri 'self';"
    
    # Permissions Policy
    Header always set Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=(), fullscreen=(self)"
    
    # Remove server information
    Header unset Server
    Header always unset X-Powered-By
    ServerTokens Prod
    
    # Proxy Configuration
    ProxyPreserveHost On
    ProxyRequests Off
    ProxyTimeout 300
    ProxyBadHeader Ignore
    
    # API Routes
    ProxyPass /api/ http://127.0.0.1:4005/api/ retry=3 timeout=30 keepalive=On
    ProxyPassReverse /api/ http://127.0.0.1:4005/api/
    
    # File Upload Routes
    ProxyPass /uploads/ http://127.0.0.1:4005/uploads/ retry=3 timeout=120 keepalive=On
    ProxyPassReverse /uploads/ http://127.0.0.1:4005/uploads/
    
    # Health Check
    ProxyPass /health http://127.0.0.1:4005/api/health retry=1 timeout=5
    ProxyPassReverse /health http://127.0.0.1:4005/api/health
    
    # WebSocket Support (if your application uses WebSockets)
    RewriteEngine On
    RewriteCond %{HTTP:Upgrade} websocket [NC]
    RewriteCond %{HTTP:Connection} upgrade [NC]
    RewriteRule ^/?(.*) "ws://127.0.0.1:4005/$1" [P,L]
    
    # Main Application (SPA)
    ProxyPass / http://127.0.0.1:4005/ retry=3 timeout=30 keepalive=On
    ProxyPassReverse / http://127.0.0.1:4005/
    
    # Proxy Headers
    <Proxy *>
        Order deny,allow
        Allow from all
    </Proxy>
    
    # Set headers for all proxied requests
    <Location />
        # Forward original request information
        RequestHeader set X-Forwarded-Proto "https"
        RequestHeader set X-Forwarded-Port "443"
        RequestHeader set X-Forwarded-For %{REMOTE_ADDR}s
        RequestHeader set X-Real-IP %{REMOTE_ADDR}s
        RequestHeader set Host %{HTTP_HOST}s
        
        # Trust proxy headers
        RequestHeader set X-Forwarded-Host %{HTTP_HOST}s
        RequestHeader set X-Forwarded-Server %{SERVER_NAME}s
    </Location>
    
    # Static File Optimization (if serving static files directly through Apache)
    <LocationMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|pdf|zip)$">
        # Cache static files
        ExpiresActive On
        ExpiresDefault "access plus 1 month"
        Header append Cache-Control "public, immutable"
        
        # Disable ETags for static files
        Header unset ETag
        FileETag None
    </LocationMatch>
    
    # Compression Configuration
    <Location />
        # Enable compression
        SetOutputFilter DEFLATE
        
        # Don't compress images and already compressed files
        SetEnvIfNoCase Request_URI \
            \.(?:gif|jpe?g|png|ico|zip|gz|bz2|rar|7z)$ no-gzip dont-vary
        
        # Don't compress very small files
        SetEnvIf Content-Length "^[0-9]$" no-gzip
        SetEnvIf Content-Length "^[0-9][0-9]$" no-gzip
        
        # Compress text-based content
        SetEnvIfNoCase Request_URI \
            \.(?:html|htm|txt|css|js|json|xml|svg)$ gzip
    </Location>
    
    # Request Size Limits
    LimitRequestBody 10485760  # 10MB limit for uploads
    LimitRequestFields 100
    LimitRequestFieldSize 8190
    LimitRequestLine 8190
    
    # Timeout Configuration
    Timeout 300
    KeepAlive On
    KeepAliveTimeout 5
    MaxKeepAliveRequests 100
    
    # Error Pages (optional)
    # ErrorDocument 404 /404.html
    # ErrorDocument 500 /500.html
    # ErrorDocument 502 /502.html
    # ErrorDocument 503 /503.html
    
    # Logging Configuration
    ErrorLog ${APACHE_LOG_DIR}/nlc-cms-error.log
    CustomLog ${APACHE_LOG_DIR}/nlc-cms-access.log combined
    
    # SSL Request Logging
    CustomLog ${APACHE_LOG_DIR}/nlc-cms-ssl.log \
        "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b %D"
    
    # Performance Logging (optional)
    # LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\" %D" combined_with_time
    # CustomLog ${APACHE_LOG_DIR}/nlc-cms-performance.log combined_with_time
</VirtualHost>

# Additional Security Configuration
<Directory "/var/www/nlc-cms">
    Options -Indexes -FollowSymLinks
    AllowOverride None
    Require all denied
</Directory>

<Directory "/var/www/nlc-cms/public">
    Options -Indexes -FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>

# Hide sensitive files
<FilesMatch "^\.">
    Require all denied
</FilesMatch>

<FilesMatch "\.(env|log|sql|md|json|lock)$">
    Require all denied
</FilesMatch>

# Prevent access to Node.js files
<FilesMatch "\.(js|ts|jsx|tsx)$">
    <RequireAll>
        Require all denied
    </RequireAll>
</FilesMatch>
# Fix_Smart_CMS   - Docker Compose Configuration
# Production-ready deployment with PostgreSQL database

version: '3.8'

services:
  # ============================================================================
  # PostgreSQL Database Service
  # ============================================================================
  database:
    image: postgres:15-alpine
    container_name: nlc-cms-database
    restart: unless-stopped
    environment:
      POSTGRES_DB: nlc_cms_prod
      POSTGRES_USER: nlc_cms_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_change_me}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - nlc-cms-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nlc_cms_user -d nlc_cms_prod"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # ============================================================================
  # Fix_Smart_CMS Application Service
  # ============================================================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: nlc-cms-app
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      # Application Configuration
      NODE_ENV: production
      PORT: 4005
      CLIENT_URL: ${CLIENT_URL:-http://localhost:4005}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:4005}
      
      # Database Configuration
      DATABASE_URL: postgresql://nlc_cms_user:${DB_PASSWORD:-secure_password_change_me}@database:5432/nlc_cms_prod
      
      # Authentication
      JWT_SECRET: ${JWT_SECRET:-your-super-secure-jwt-secret-256-bits}
      JWT_EXPIRE: ${JWT_EXPIRE:-7d}
      
      # Email Configuration
      EMAIL_SERVICE: ${EMAIL_SERVICE:-smtp.gmail.com}
      EMAIL_USER: ${EMAIL_USER:-your-email@domain.com}
      EMAIL_PASS: ${EMAIL_PASS:-your-app-password}
      EMAIL_PORT: ${EMAIL_PORT:-587}
      EMAIL_FROM: ${EMAIL_FROM:-NLC-CMS <noreply@domain.com>}
      
      # Security Configuration
      TRUST_PROXY: "true"
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX: ${RATE_LIMIT_MAX:-1000}
      
      # File Upload Configuration
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-10485760}
      UPLOAD_PATH: ./uploads
      
      # Logging Configuration
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_FILE: logs/application.log
    volumes:
      # Persistent data volumes
      - uploads_data:/app/uploads
      - logs_data:/app/logs
      - ssl_certs:/app/config/ssl:ro
    ports:
      - "${APP_PORT:-4005}:4005"
    networks:
      - nlc-cms-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4005/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ============================================================================
  # Nginx Reverse Proxy (Optional)
  # ============================================================================
  nginx:
    image: nginx:alpine
    container_name: nlc-cms-nginx
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ssl_certs:/etc/nginx/ssl:ro
      - logs_data:/var/log/nginx
    networks:
      - nlc-cms-network
    profiles:
      - nginx
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# ============================================================================
# Networks
# ============================================================================
networks:
  nlc-cms-network:
    driver: bridge
    name: nlc-cms-network

# ============================================================================
# Volumes
# ============================================================================
volumes:
  postgres_data:
    driver: local
    name: nlc-cms-postgres-data
  uploads_data:
    driver: local
    name: nlc-cms-uploads
  logs_data:
    driver: local
    name: nlc-cms-logs
  ssl_certs:
    driver: local
    name: nlc-cms-ssl-certs